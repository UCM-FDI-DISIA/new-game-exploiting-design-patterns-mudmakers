package view;
import server.MudServer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.io.File;

public class GameGUI extends JFrame {
    private JButton startButton;
    private JButton quitButton;
    private JButton muteButton;
    private JButton for_design_only;
    public GameGUI(File img_background, File img_start, File img_exit, File img_audio) {
        Soundtrack.playTitleTheme();
        JLabel background=new JLabel(new ImageIcon(img_background.getAbsolutePath()));
        add(background);
        background.setLayout(new BorderLayout());

        startButton = createButton("Start", img_start, 457, 462, 110, 100);
        quitButton = createButton("Quit", img_exit, 850, 50, 100, 100);
        muteButton = createButton("Mute", img_audio, 800, 800, 65, 60);

        for_design_only = new JButton("");
        background.add(startButton, BorderLayout.SOUTH);
        background.add(quitButton, BorderLayout.SOUTH);
        background.add(muteButton, BorderLayout.SOUTH);
        background.add(for_design_only, BorderLayout.SOUTH);
        for_design_only.setVisible(false);

        startButton.addActionListener(new StartButtonListener());
        quitButton.addActionListener(new QuitButtonListener());
        muteButton.addActionListener(new MuteButtonListener());

        setTitle("MUD makers");
        setPreferredSize(new Dimension(1024, 1024));
        pack();
        setLocationRelativeTo(null);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
    }
    private JButton createButton(String text, File iconFile, int x, int y, int width, int height) {
        JButton button = new JButton(text);
        button.setIcon(new ImageIcon(iconFile.getAbsolutePath()));
        button.setContentAreaFilled(false);
        button.setFocusPainted(false);
        button.setBorderPainted(false);
        button.setBounds(x, y, width, height);
        return button;
    }
    private class StartButtonListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            startButton.setEnabled(false);
            Thread serverThread = new Thread(() -> {
                MudServer.main(new String[]{});
            });
            serverThread.start();

            try {
                Thread.sleep(2000);
            } catch (InterruptedException ex) {
                ex.printStackTrace();
            }

            MUDFrame frame = new MUDFrame();
            if (!frame.init()) {
                JOptionPane.showMessageDialog(null, "Couldn't connect to server");
                System.exit(1);
            }
            startButton.setBackground(new Color(119, 220, 34));
        }
    }

    private class MuteButtonListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            Soundtrack.toggleMute();
        }
    }
    private class QuitButtonListener implements ActionListener {
        public void actionPerformed(ActionEvent e) {
            System.exit(0);
        }
    }

    public static void main(String args[]) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                File background = new File("src/img/background.jpg");
                File start = new File("src/img/start.png");
                File exit = new File("src/img/exit.png");
                File audio = new File("src/img/audio.png");
                if (background != null) {
                    GameGUI frame = new GameGUI(background,start,exit, audio);
                    frame.setVisible(true);
                }
            }
        });
    }
}
