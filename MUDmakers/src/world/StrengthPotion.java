package world;

/**
 * The StrengthPotion class can be used to create objects a player can consume to
 * increase their strength points. When a player uses the strength potion, the
 * strength potion will increase the player's strength points by the amount of strength
 * points it has available and set itself to zero strength points. It extends Gear and
 * Implements Runnable.
 * 
 */
public class StrengthPotion extends Gear implements Runnable {

    private static final long serialVersionUID = 1L;
    private int strengthPoints;
    private transient Thread thread;

    /**
     * The StrengthPotion constructor takes in a String name, a String description,
     * and the max strength points the StrengthPotion will have. 
     * @param name
     *            - A String that represents the name of the strength potion.
     * @param description
     *            - A String that represents the description of the strength potion.
     * @param strengthPoints
     *            - An int that represents the initial and max strength points of
     *            the strength potion.
     */
    public StrengthPotion(String name, String description, int strengthPoints) {
        super(name, description);
        this.strengthPoints = strengthPoints;
        thread = new Thread(this);
        thread.start();
    }

    @Override
    public void getDefaultBehavior(Movable movable) {
        if (this.strengthPoints == 0) {
            movable.sendToPlayer("Potion has been used.");
        }
        else {
        	movable.setStat(strengthPoints + movable.getStat(Trait.STRENGTH),
                Trait.STRENGTH);
        	movable.sendToPlayer("Your strength points are "
                + movable.getStat(Trait.STRENGTH));
        	this.strengthPoints = 0;
        }
        
    }

    /**
     * This run() method will run every 30 seconds and increment the strength
     */
    @Override
    public void run() {
    	try {
			while (true) {

				synchronized (World.getInstance().getLockObject()) {
					while (World.getInstance().threadsLocked()) {
						try {
							World.getInstance().getLockObject().wait();
						} catch (InterruptedException e) {
							e.printStackTrace();
						}
					}
				}

				if (this.strengthPoints <= 0) {
					break;
				}

				Thread.sleep(10000);
			}
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}
}
