package world;

/**
 * The AgilityPotion class is designed to create objects that a player can consume to
 * increase their agility points. Upon creation, the agility potion will store the max
 * agility points available to a player. When a player uses the agility potion, it will
 * increase the player's agility points by the amount of agility points it has available
 * and set itself to zero agility points. A thread in the agility potion runs every 30
 * seconds to regenerate the AgilityPotion's agility points by one increment until it
 * reaches its max agility points. It extends Gear and Implements Runnable.
 * 
 * @author Matt Turner, Ross Bottorf, Zach Boe, Jonathan Perrine
 * 
 */
public class AgilityPotion extends Gear implements Runnable {

    private static final long serialVersionUID = 1L;
    private int agilityPoints;
    private transient Thread thread;

    /**
     * The AgilityPotion constructor takes in a String name, a String description,
     * and the max agility points the AgilityPotion will have. The agilityPoints
     * available to the player will start out at the max agility points and
     * remain until used by a player.
     * 
     * @param name
     *            - A String that represents the name of the agility potion.
     * @param description
     *            - A String that represents the description of the agility potion.
     * @param agilityPoints
     *            - An int that represents the initial and max agility points of
     *            the agility potion.
     */
    public AgilityPotion(String name, String description, int agilityPoints) {
        super(name, description);
        this.agilityPoints = agilityPoints;
        this.setCharClass("Default");
        thread = new Thread(this);
        thread.start();
    }


	@Override
    public void getDefaultBehavior(Movable movable) {
        if (this.agilityPoints == 0) {
            movable.sendToPlayer("Potion has been used and is regenerating.");
        }
        else {
        	movable.setStat(agilityPoints + movable.getStat(Trait.AGILITY),
                Trait.AGILITY);
        	movable.sendToPlayer("Your agility points are "
                + movable.getStat(Trait.AGILITY));
        	this.agilityPoints = 0;
        }
        
    }

    /**
     * This run() method will run every 30 seconds and increment the agility
     * potion's agility points by one until its agility points reaches its max agility
     * points.
     */
    @Override
    public void run() {
        try {
            while (true) {

                synchronized (World.getInstance().getLockObject()) {
                    while (World.getInstance().threadsLocked()) {
                        try {
                            World.getInstance().getLockObject().wait();
                        } catch (InterruptedException e) {
                            e.printStackTrace();
                        }
                    }
                }
                Thread.sleep(30000);
            }
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
    }
}
